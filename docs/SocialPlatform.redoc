openapi: 3.0.0
info:
  title: Persona-Based Social Platform API
  version: 1.0.0
  description: Complete API documentation supporting all platform features, including personas, posts, relationships, moderation, and real-time interactions.

servers:
  - url: https://api.example.com
    description: Production Server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    Page:
      in: query
      name: page
      schema:
        type: integer
        default: 1
      description: The page number for paginated results.

    Limit:
      in: query
      name: limit
      schema:
        type: integer
        default: 20
      description: The number of items per page.

    StatusFilter:
      in: query
      name: status
      schema:
        type: string
        enum: [active, deleted, archived, expired]
      description: Filter by post status.

    LatLng:
      in: query
      name: lat,lng
      schema:
        type: array
        items:
          type: number
      description: Latitude and Longitude for geolocation-based queries.

  schemas:
    Persona:
      type: object
      properties:
        id:
          type: string
        handle:
          type: string
        type:
          type: string
        avatar_url:
          type: string
        metadata:
          type: object

    Post:
      type: object
      properties:
        id:
          type: string
        author_id:
          type: string
        persona_id:
          type: string
        content:
          type: object
        visibility_level:
          type: string
        status:
          type: string
        lat:
          type: number
        lng:
          type: number

    Relationship:
      type: object
      properties:
        persona_id:
          type: string
        target_persona_id:
          type: string
        relationship_type:
          type: string
        status:
          type: string

paths:
  /auth/me:
    get:
      summary: Get Authenticated User
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Persona'

  /personas:
    get:
      summary: List Personas
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: List of Personas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Persona'

    post:
      summary: Create a Persona
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Persona'
      responses:
        '201':
          description: Persona Created

    patch:
      summary: Update Persona
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Persona'
      responses:
        '200':
          description: Persona Updated

    delete:
      summary: Delete Persona
      security:
        - BearerAuth: []
      responses:
        '204':
          description: Persona Deleted

  /posts:
    get:
      summary: Get Posts
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/StatusFilter'
        - $ref: '#/components/parameters/LatLng'
      responses:
        '200':
          description: List of Posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'

    post:
      summary: Create a Post
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '201':
          description: Post Created

    patch:
      summary: Update Post
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '200':
          description: Post Updated

    delete:
      summary: Delete Post
      security:
        - BearerAuth: []
      responses:
        '204':
          description: Post Deleted

  /relationships:
    post:
      summary: Create Relationship
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Relationship'
      responses:
        '201':
          description: Relationship Created

  /flags:
    get:
      summary: List Flagged Content
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: List of Flags

    post:
      summary: Flag Content
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                post_id:
                  type: string
                reason:
                  type: string
      responses:
        '201':
          description: Content Flagged

  /notifications:
    get:
      summary: List Notifications
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: List of Notifications

security:
  - BearerAuth: []
